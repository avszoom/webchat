{"ast":null,"code":"var _jsxFileName = \"/Users/avinashsingh/Documents/Projects/webchat/frontend/src/Call.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { usePeer } from './lib/PeerProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Call({\n  remoteUser\n}) {\n  _s();\n  const {\n    peer,\n    peerId\n  } = usePeer();\n  const [callId, setCallId] = useState('');\n  let callInitiated = false;\n  useEffect(() => {\n    if (remoteUser && !callInitiated) {\n      callInitiated = true;\n      fetch(\"http://localhost:3000/getUserId/\" + remoteUser).then(res => res.json()).then(data => {\n        // initiateCall(data.userId)\n      });\n    }\n  }, []);\n  function initiateCall() {\n    const remoteUserId = callId;\n    console.log(remoteUserId);\n    // let getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\n    // getUserMedia({video: true, audio: true}, function(stream) {\n    //     var call = peer.call(remoteUserId[0], stream);\n    //     console.log(remoteUserId[0]);\n    //     call.on('stream', function(remoteStream) {\n    //         // Show stream in some video/canvas element.\n    //         console.log('received remotestream');\n    //     });\n    // }, function(err) {\n    // console.log('Failed to get local stream' ,err);\n    // });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Calling \", remoteUser, /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: callId,\n      onChange: e => setCallId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => initiateCall()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 12\n  }, this);\n}\n_s(Call, \"O9S2yVNda3Dw/tQfHUL6fN/7Dy8=\", false, function () {\n  return [usePeer];\n});\n_c = Call;\nvar _c;\n$RefreshReg$(_c, \"Call\");","map":{"version":3,"names":["useEffect","useState","usePeer","jsxDEV","_jsxDEV","Call","remoteUser","_s","peer","peerId","callId","setCallId","callInitiated","fetch","then","res","json","data","initiateCall","remoteUserId","console","log","children","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/avinashsingh/Documents/Projects/webchat/frontend/src/Call.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { usePeer } from './lib/PeerProvider';\n\nexport function Call({remoteUser}) {\n    const {peer, peerId} = usePeer();\n    const [callId,setCallId] = useState('');\n    let callInitiated = false;\n    useEffect(() => {\n        if(remoteUser && !callInitiated) {\n            callInitiated = true;\n            fetch(\"http://localhost:3000/getUserId/\" + remoteUser)\n                .then((res) => res.json())\n                .then((data) => {\n                    // initiateCall(data.userId)\n                });\n        }\n    },[]);\n\n    function initiateCall() {\n        const remoteUserId = callId;\n        console.log(remoteUserId);\n        // let getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\n        // getUserMedia({video: true, audio: true}, function(stream) {\n        //     var call = peer.call(remoteUserId[0], stream);\n        //     console.log(remoteUserId[0]);\n        //     call.on('stream', function(remoteStream) {\n        //         // Show stream in some video/canvas element.\n        //         console.log('received remotestream');\n        //     });\n        // }, function(err) {\n        // console.log('Failed to get local stream' ,err);\n        // });\n    }\n\n    return <div>\n            Calling {remoteUser}\n            <input type=\"text\" value={callId} onChange={e => setCallId(e.target.value)}></input>\n            <button onClick={() => initiateCall()}></button>\n        </div>\n}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,OAAO,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,OAAO,SAASC,IAAIA,CAAC;EAACC;AAAU,CAAC,EAAE;EAAAC,EAAA;EAC/B,MAAM;IAACC,IAAI;IAAEC;EAAM,CAAC,GAAGP,OAAO,CAAC,CAAC;EAChC,MAAM,CAACQ,MAAM,EAACC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACvC,IAAIW,aAAa,GAAG,KAAK;EACzBZ,SAAS,CAAC,MAAM;IACZ,IAAGM,UAAU,IAAI,CAACM,aAAa,EAAE;MAC7BA,aAAa,GAAG,IAAI;MACpBC,KAAK,CAAC,kCAAkC,GAAGP,UAAU,CAAC,CACjDQ,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;QACZ;MAAA,CACH,CAAC;IACV;EACJ,CAAC,EAAC,EAAE,CAAC;EAEL,SAASC,YAAYA,CAAA,EAAG;IACpB,MAAMC,YAAY,GAAGT,MAAM;IAC3BU,OAAO,CAACC,GAAG,CAACF,YAAY,CAAC;IACzB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACJ;EAEA,oBAAOf,OAAA;IAAAkB,QAAA,GAAK,UACI,EAAChB,UAAU,eACnBF,OAAA;MAAOmB,IAAI,EAAC,MAAM;MAACC,KAAK,EAAEd,MAAO;MAACe,QAAQ,EAAEC,CAAC,IAAIf,SAAS,CAACe,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACpF3B,OAAA;MAAQ4B,OAAO,EAAEA,CAAA,KAAMd,YAAY,CAAC;IAAE;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AACd;AAACxB,EAAA,CApCeF,IAAI;EAAA,QACOH,OAAO;AAAA;AAAA+B,EAAA,GADlB5B,IAAI;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}