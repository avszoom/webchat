{"ast":null,"code":"var _jsxFileName = \"/Users/avinashsingh/Documents/Projects/webchat/frontend/src/lib/PeerProvider.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport Peer from 'peerjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocketContext = /*#__PURE__*/createContext();\nexport const useSocket = () => {\n  _s();\n  return useContext(SocketContext);\n};\n_s(useSocket, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const SocketProvider = ({\n  children\n}) => {\n  _s2();\n  const [socket, setSocket] = useState(null);\n  useEffect(() => {\n    console.log(\"socket provider\");\n    const peer = new Peer({\n      host: 'localhost',\n      port: 3000,\n      path: '/peerjs'\n    });\n    peer.on('open', id => {\n      console.log(id);\n    });\n\n    // const newSocket = io(\n    //     'http://localhost:3000', // Replace with your backend server URL\n    //     { transports : ['websocket'] }\n    // );\n    // setSocket(newSocket);\n\n    // return () => newSocket.close();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n    value: socket,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s2(SocketProvider, \"NvwYO9vJOwIMt5STdlMKfWhuxZw=\");\n_c = SocketProvider;\nvar _c;\n$RefreshReg$(_c, \"SocketProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","io","Peer","jsxDEV","_jsxDEV","SocketContext","useSocket","_s","SocketProvider","children","_s2","socket","setSocket","console","log","peer","host","port","path","on","id","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/avinashsingh/Documents/Projects/webchat/frontend/src/lib/PeerProvider.jsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport Peer from 'peerjs';\n\nconst SocketContext = createContext();\n\nexport const useSocket = () => useContext(SocketContext);\n\nexport const SocketProvider = ({ children }) => {\n    const [socket, setSocket] = useState(null);\n\n    useEffect(() => {\n        console.log(\"socket provider\");\n        const peer = new Peer({\n            host: 'localhost',\n            port: 3000,\n            path: '/peerjs',\n        });\n        peer.on('open', (id) => {\n            console.log(id);\n        });\n        \n        // const newSocket = io(\n        //     'http://localhost:3000', // Replace with your backend server URL\n        //     { transports : ['websocket'] }\n        // );\n        // setSocket(newSocket);\n\n        // return () => newSocket.close();\n    }, []);\n\n    return (\n        <SocketContext.Provider value={socket}>\n            {children}\n        </SocketContext.Provider>\n    );\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC7E,OAAOC,EAAE,MAAM,kBAAkB;AACjC,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAa,gBAAGR,aAAa,CAAC,CAAC;AAErC,OAAO,MAAMS,SAAS,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMT,UAAU,CAACO,aAAa,CAAC;AAAA;AAACE,EAAA,CAA5CD,SAAS;AAEtB,OAAO,MAAME,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACZc,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;IAC9B,MAAMC,IAAI,GAAG,IAAIb,IAAI,CAAC;MAClBc,IAAI,EAAE,WAAW;MACjBC,IAAI,EAAE,IAAI;MACVC,IAAI,EAAE;IACV,CAAC,CAAC;IACFH,IAAI,CAACI,EAAE,CAAC,MAAM,EAAGC,EAAE,IAAK;MACpBP,OAAO,CAACC,GAAG,CAACM,EAAE,CAAC;IACnB,CAAC,CAAC;;IAEF;IACA;IACA;IACA;IACA;;IAEA;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIhB,OAAA,CAACC,aAAa,CAACgB,QAAQ;IAACC,KAAK,EAAEX,MAAO;IAAAF,QAAA,EACjCA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAEjC,CAAC;AAAChB,GAAA,CA5BWF,cAAc;AAAAmB,EAAA,GAAdnB,cAAc;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}