{"ast":null,"code":"var _jsxFileName = \"/Users/avinashsingh/Documents/Projects/webchat/frontend/src/lib/PeerProvider.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport Peer from 'peerjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PeerContext = /*#__PURE__*/createContext();\nexport const usePeer = () => {\n  _s();\n  return useContext(PeerContext);\n};\n_s(usePeer, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const PeerProvider = ({\n  children\n}) => {\n  _s2();\n  const [peer, setPeer] = useState(null);\n  useEffect(() => {\n    console.log(\"before\", peer);\n    const peer = new Peer({\n      host: 'localhost',\n      port: 3000,\n      path: '/peerjs'\n    });\n    console.log('between', peer);\n    setPeer(peer);\n    return () => {\n      // Cleanup code\n      peer.disconnect();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(PeerContext.Provider, {\n    value: peer,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s2(PeerProvider, \"u6VxUCaFRQjA4E7I8/puheusUmc=\");\n_c = PeerProvider;\nvar _c;\n$RefreshReg$(_c, \"PeerProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","Peer","jsxDEV","_jsxDEV","PeerContext","usePeer","_s","PeerProvider","children","_s2","peer","setPeer","console","log","host","port","path","disconnect","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/avinashsingh/Documents/Projects/webchat/frontend/src/lib/PeerProvider.jsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\nimport Peer from 'peerjs';\n\nconst PeerContext = createContext();\n\nexport const usePeer = () => useContext(PeerContext);\n\nexport const PeerProvider = ({ children }) => {\n    const [peer, setPeer] = useState(null);\n\n    useEffect(() => {\n        console.log(\"before\", peer);\n        const peer = new Peer({\n                host: 'localhost',\n                port: 3000,\n                path: '/peerjs',\n            });\n        console.log('between', peer);\n        setPeer(peer);\n        \n        return () => {\n            // Cleanup code\n            peer.disconnect();\n          };\n    }, []);\n\n    return (\n        <PeerContext.Provider value={peer}>\n            {children}\n        </PeerContext.Provider>\n    );\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC7E,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMQ,OAAO,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMR,UAAU,CAACM,WAAW,CAAC;AAAA;AAACE,EAAA,CAAxCD,OAAO;AAEpB,OAAO,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC1C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACZa,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEH,IAAI,CAAC;IAC3B,MAAMA,IAAI,GAAG,IAAIT,IAAI,CAAC;MACda,IAAI,EAAE,WAAW;MACjBC,IAAI,EAAE,IAAI;MACVC,IAAI,EAAE;IACV,CAAC,CAAC;IACNJ,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEH,IAAI,CAAC;IAC5BC,OAAO,CAACD,IAAI,CAAC;IAEb,OAAO,MAAM;MACT;MACAA,IAAI,CAACO,UAAU,CAAC,CAAC;IACnB,CAAC;EACP,CAAC,EAAE,EAAE,CAAC;EAEN,oBACId,OAAA,CAACC,WAAW,CAACc,QAAQ;IAACC,KAAK,EAAET,IAAK;IAAAF,QAAA,EAC7BA;EAAQ;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAACd,GAAA,CAxBWF,YAAY;AAAAiB,EAAA,GAAZjB,YAAY;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}